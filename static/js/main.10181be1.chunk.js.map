{"version":3,"sources":["components/ImageLogic/ImageLogic.js","components/FancyDrop/FancyDrop.js","components/App/App.js","serviceWorker.js","index.js"],"names":["mimeTypes","PNG","Jimp","MIME_PNG","JPG","MIME_JPEG","BMP","MIME_BMP","ImageLogic","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","process","handleNext","setImageFilterState","index","Math","min","state","files","length","handlePrevious","max","readAsArrayBuffer","file","Promise","resolve","reject","fr","FileReader","onload","e","target","result","onWorkerMessage","_ref","data","type","handleWebWorkerFinalSaveResult","setState","objectSpread","loading","progress","payload","func","wait","immediate","timeout","context","args","arguments","callNow","clearTimeout","setTimeout","apply","debounce","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","worker","postMessage","stop","save","_ref3","_callee2","ratio","_context2","imageRef","abrupt","naturalWidth","clientWidth","_x","_ref5","_callee3","_ref4","prodData","quality","blob","uint8array","_context3","window","imagemin","sent","Blob","saveAs","name","_x2","patch","onImageLoaded","image","crop","onCropComplete","onCropChange","fileNameExtensionMime","split","slice","toUpperCase","mime","Worker","onmessage","_this2","react_default","createElement","className","onChange","greyscale","checked","style","opacity","undefined","x","disabled","onClick","round","y","width","height","resize","resizeX","value","step","placeholder","resizeY","rotation","rotationResize","brightness","contrast","background","backgroundColor","opaque","defaultValue","fade","blur","posterize","sepia","mirror","invert","normalize","onBack","prettyBytes","size","react_spinners","color","margin","display","blobUrl","ReactCrop_default","src","onComplete","Component","FancyDrop","onDrop","components_ImageLogic_ImageLogic","es","accept","getRootProps","getInputProps","isDragActive","classnames","dropzone","active","App","components_FancyDrop_FancyDrop","Boolean","location","hostname","match","ReactDOM","render","components_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.10181be1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './ImageLogic.css';\r\nimport Jimp from 'jimp/es';\r\nimport { saveAs } from 'file-saver';\r\nimport prettyBytes from 'pretty-bytes';\r\nimport { BounceLoader } from 'react-spinners';\r\nimport ReactCrop from \"react-image-crop\";\r\nimport \"react-image-crop/dist/ReactCrop.css\";\r\n\r\nconst mimeTypes = {\r\n    PNG: Jimp.MIME_PNG, // \"image/png\"\r\n    JPG: Jimp.MIME_JPEG, // \"image/jpeg\"\r\n    BMP: Jimp.MIME_BMP // \"image/bmp\"\r\n};\r\n\r\nclass ImageLogic extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const fileNameExtensionMime = mimeTypes[(props.files[0].name.split('.').slice(-1)[0] || '').toUpperCase()];\r\n        this.state = {\r\n            files: props.files,\r\n            mime: fileNameExtensionMime,\r\n            loading: false,\r\n            crop: {},\r\n            index: 0,\r\n        }\r\n        this.worker = new window.Worker('jimp-worker.js');\r\n        this.worker.onmessage = this.onWorkerMessage;\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        this.process();\r\n    }\r\n\r\n    handleNext = () => {\r\n        this.setImageFilterState({ index: Math.min(this.state.index + 1, this.state.files.length - 1) })\r\n    }\r\n\r\n    handlePrevious = () => {\r\n        this.setImageFilterState({ index: Math.max(this.state.index - 1, 0) })\r\n    }\r\n\r\n    readAsArrayBuffer = file => {\r\n        return new Promise((resolve, reject) => {\r\n            const fr = new FileReader();\r\n            fr.onload = e => {\r\n                resolve(e.target.result);\r\n            }\r\n            fr.readAsArrayBuffer(file);\r\n        });\r\n    }\r\n\r\n    onWorkerMessage = ({ data }) => {\r\n        if (data.type === 'FINAL') {\r\n            this.handleWebWorkerFinalSaveResult({ data });\r\n        } else if (data.type === 'PREVIEW') {\r\n            this.setState({ ...data, loading: false });\r\n        } else if (data.type === 'PROGRESS') {\r\n            this.setState({ progress: data.payload });\r\n        }\r\n    }\r\n\r\n    process = debounce(async () => {\r\n        this.setState({ loading: true })\r\n        this.worker.postMessage({ state: this.state, type: 'PREVIEW' }); // message the worker thread\r\n    }, 500);\r\n\r\n    save = async e => {\r\n        if (!this.imageRef) return;\r\n        const ratio = this.imageRef.naturalWidth / this.imageRef.clientWidth;\r\n        this.setState({ loading: true });\r\n        this.worker.postMessage({ state: this.state, ratio, type: 'FINAL' }); // message the worker thread\r\n\r\n    }\r\n\r\n    handleWebWorkerFinalSaveResult = async ({ data }) => {\r\n        const { prodData } = data;\r\n        const { quality } = this.state;\r\n        let blob;\r\n        if (window.imagemin) {\r\n            var uint8array = await window.imagemin(prodData, quality);\r\n            blob = new Blob([uint8array]);\r\n        } else {\r\n            blob = new Blob([prodData]);\r\n        }\r\n        saveAs(blob, this.state.files[this.state.index].name);\r\n        this.setState({ loading: false });\r\n    }\r\n\r\n    setImageFilterState = patch => {\r\n        this.setState({ ...patch }, this.process);\r\n    }\r\n\r\n    onImageLoaded = (image, crop) => {\r\n        this.imageRef = image;\r\n    };\r\n\r\n    onCropComplete = crop => {\r\n        this.setState({ crop });\r\n    };\r\n\r\n    onCropChange = crop => {\r\n        this.setState({ crop });\r\n    };\r\n\r\n    render() {\r\n        return (<div className=\"imglogic\">\r\n            <div className=\"panel\">\r\n                <div className=\"heading\">Filters</div>\r\n                File:<br />\r\n                <div className=\"checkbox\">\r\n                    <label>\r\n                        <input onChange={e => this.setImageFilterState({ greyscale: e.target.checked })} type=\"checkbox\" /> Greyscale\r\n                    </label>\r\n                </div>\r\n                <button style={{ opacity: this.state.crop.x === undefined ? .5 : 1 }} disabled={this.state.crop.x === undefined} onClick={() => this.setImageFilterState({ crop: {} })} className=\"btn btn-large btn-primary\">Remove Crop</button>{' '}\r\n                {this.state.crop.x !== undefined\r\n                    && <span>Crop: {Math.round(this.state.crop.x)},{Math.round(this.state.crop.y)} - {Math.round(this.state.crop.width)}x{Math.round(this.state.crop.height)}</span>\r\n                    || null}\r\n                <br />\r\n                <br />\r\n                <div className=\"form-group\">\r\n                    <div className=\"checkbox\">\r\n                        <label>\r\n                            <input onChange={e => this.setImageFilterState({ crop: {}, resize: e.target.checked })} type=\"checkbox\" /> Resize\r\n                    </label>\r\n                    </div>\r\n                    <input onChange={e => this.setImageFilterState({ crop: {}, resizeX: +e.target.value })} style={{ width: 100 }} type=\"number\" step=\"0\" min=\"1\" className=\"form-control\" placeholder=\"pixel width\" />\r\n                    {' '}X{' '}\r\n                    <input onChange={e => this.setImageFilterState({ crop: {}, resizeY: +e.target.value })} style={{ width: 100 }} type=\"number\" step=\"0\" min=\"1\" className=\"form-control\" placeholder=\"pixel height\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>JPEG/PNG Quality</label>\r\n                    <input onChange={e => this.setImageFilterState({ quality: +e.target.value })} type=\"number\" step=\"0\" min=\"1\" max=\"100\" className=\"form-control\" placeholder=\"A value from 0-100\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Rotatation in degress (0-360)</label>\r\n                    <input onChange={e => this.setImageFilterState({ rotation: +e.target.value })} type=\"number\" step=\"0\" min=\"0\" max=\"360\" className=\"form-control\" placeholder=\"A value from 0-360\" />\r\n                </div>\r\n\r\n                <div className=\"checkbox\">\r\n                    <label>\r\n                        <input onChange={e => this.setImageFilterState({ rotationResize: !e.target.checked })} type=\"checkbox\" /> Don't resize after rotation\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Brightness</label>\r\n                    <input onChange={e => this.setImageFilterState({ brightness: +e.target.value })} type=\"number\" step=\"0.01\" min=\"-1\" max=\"1\" className=\"form-control\" placeholder=\"A value from -1 to 1\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Contrast</label>\r\n                    <input onChange={e => this.setImageFilterState({ contrast: +e.target.value })} type=\"number\" step=\"0.01\" min=\"-1\" max=\"1\" className=\"form-control\" placeholder=\"A value from -1 to 1\" />\r\n                </div>\r\n\r\n                <div className=\"checkbox\">\r\n                    <label>\r\n                        <input onChange={e => this.setImageFilterState({ background: e.target.checked })} type=\"checkbox\" />\r\n                        {' '}Color <input type=\"color\" onChange={e => this.setImageFilterState({ backgroundColor: e.target.value })} />\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"checkbox\">\r\n                    <label>\r\n                        <input onChange={e => this.setImageFilterState({ opaque: e.target.checked })} type=\"checkbox\" /> Opaque\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fade</label>\r\n                    <input defaultValue=\"0\" onChange={e => this.setImageFilterState({ fade: +e.target.value })} type=\"number\" step=\"0.01\" min=\"0\" max=\"1\" className=\"form-control\" placeholder=\"A value from 0 to 1\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Opacity</label>\r\n                    <input defaultValue=\"1\" onChange={e => this.setImageFilterState({ opacity: +e.target.value })} type=\"number\" step=\"0.01\" min=\"0\" max=\"1\" className=\"form-control\" placeholder=\"A value from 0 to 1\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Blur</label>\r\n                    <input onChange={e => this.setImageFilterState({ blur: +e.target.value })} type=\"number\" step=\"1\" min=\"0\" className=\"form-control\" placeholder=\"The blur radius in pixels\" />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Posterize</label>\r\n                    <input onChange={e => this.setImageFilterState({ posterize: +e.target.value })} type=\"number\" step=\"1\" min=\"0\" className=\"form-control\" />\r\n                </div>\r\n\r\n                <div className=\"checkbox\">\r\n                    <label>\r\n                        <input onChange={e => this.setImageFilterState({ sepia: e.target.checked })} type=\"checkbox\" /> Sepia\r\n                    </label>\r\n                </div>\r\n\r\n                Mirror:<br />\r\n                <select onChange={e => this.setImageFilterState({ mirror: e.target.value })} className=\"form-control\">\r\n                    <option value={false}>Don't mirror</option>\r\n                    <option value=\"horizontal\">Horizonal</option>\r\n                    <option value=\"vertical\">Vertical</option>\r\n                </select>\r\n\r\n                <div className=\"checkbox\">\r\n                    <label>\r\n                        <input onChange={e => this.setImageFilterState({ invert: e.target.checked })} type=\"checkbox\" /> Invert\r\n                    </label>\r\n                </div>\r\n\r\n                <div className=\"checkbox\">\r\n                    <label>\r\n                        <input onChange={e => this.setImageFilterState({ normalize: e.target.checked })} type=\"checkbox\" /> Normalize\r\n                    </label>\r\n                </div>\r\n\r\n                <select defaultValue={this.state.mime} className=\"form-control\" onChange={e => this.setImageFilterState({ mime: e.target.value })}>\r\n                    <option value={Jimp.MIME_PNG} >PNG</option>\r\n                    <option value={Jimp.MIME_JPEG} >JPG</option>\r\n                    <option value={Jimp.MIME_BMP} >BMP</option>\r\n                </select>\r\n                <br />\r\n                <br />\r\n\r\n                <button onClick={this.save} className=\"btn btn-large btn-primary\">Save</button>{' '}\r\n                <button onClick={this.props.onBack} className=\"btn btn-large btn-warning\">Back</button>\r\n\r\n                <br />\r\n                <br />\r\n                {this.state.blob && prettyBytes(this.state.blob.size)}\r\n                <br />\r\n                <br />\r\n                <div className=\"bounce-loader\">\r\n                    <BounceLoader size={150}\r\n                        color={'#7edc91'}\r\n                        loading={this.state.loading}\r\n                        margin=\"2px auto\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"image\">\r\n                <div style={{ display: this.state.index > 0 ? 'block' : 'none' }} onClick={this.handlePrevious} className=\"left icon icon-left-open-big\" />\r\n                <div style={{ display: this.state.index < this.state.files.length - 1 ? 'block' : 'none' }} onClick={this.handleNext} className=\"right icon icon-right-open-big\" />\r\n                <div className=\"image-innner\">\r\n                    {this.state.blobUrl && <ReactCrop\r\n                        src={this.state.blobUrl}\r\n                        crop={this.state.crop}\r\n                        onImageLoaded={this.onImageLoaded}\r\n                        onComplete={this.onCropComplete}\r\n                        onChange={this.onCropChange}\r\n                    /> || <div style={{ width: 200, height: 200 }} />}\r\n                    <div className={'bounce-loader ' + (this.state.loading ? 'loading' : '')}>\r\n                        <BounceLoader size={150}\r\n                            color={'#7edc91'}\r\n                            loading={this.state.loading}\r\n                            margin=\"2px auto\" />\r\n                        <p>{this.state.progress}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default ImageLogic;\r\n\r\n// Returns a function, that, as long as it continues to be invoked, will not\r\n// be triggered. The function will be called after it stops being called for\r\n// N milliseconds. If `immediate` is passed, trigger the function on the\r\n// leading edge, instead of the trailing.\r\nfunction debounce(func, wait, immediate) {\r\n    var timeout;\r\n    return function () {\r\n        var context = this, args = arguments;\r\n        var later = function () {\r\n            timeout = null;\r\n            if (!immediate) func.apply(context, args);\r\n        };\r\n        var callNow = immediate && !timeout;\r\n        clearTimeout(timeout);\r\n        timeout = setTimeout(later, wait);\r\n        if (callNow) func.apply(context, args);\r\n    };\r\n};","import React, { Component } from 'react';\r\nimport Dropzone from 'react-dropzone';\r\nimport './FancyDrop.css';\r\nimport { Redirect } from 'react-router-dom';\r\nimport ImageLogic from '../ImageLogic/ImageLogic';\r\nimport classnames from 'classnames';\r\n\r\nclass FancyDrop extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            files: []\r\n        };\r\n    }\r\n\r\n    onDrop = (files) => {\r\n        this.setState({ files })\r\n    };\r\n\r\n    render() {\r\n        if (this.state.files.length > 0) {\r\n            return <ImageLogic onBack={() => this.setState({ files: [] })} files={this.state.files} />\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <h1 className=\"app-title\">Fancy</h1>\r\n                <section className=\"container\">\r\n                    <Dropzone accept=\"image/*\" onDrop={this.onDrop}>\r\n                        {({ getRootProps, getInputProps, isDragActive }) => (\r\n                            <div {...getRootProps({\r\n                                className: classnames({\r\n                                    dropzone: true,\r\n                                    active: isDragActive\r\n                                })\r\n                            })}>\r\n                                <input {...getInputProps()} />\r\n                                <span className=\"icon icon-upload\"></span>\r\n                                <p>Drag 'n' drop some fancy image.</p>\r\n                            </div>\r\n                        )}\r\n                    </Dropzone>\r\n                </section>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FancyDrop;","import React from 'react';\r\nimport './App.css';\r\nimport FancyDrop from '../FancyDrop/FancyDrop';\r\n\r\nconst childProps = {\r\n  isAuthenticated: true,\r\n  userHasAuthenticated: true\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      {/* <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header> */}\r\n\r\n      <FancyDrop />\r\n      {/* <HashRouter>\r\n        <Routes childProps={childProps} />\r\n      </HashRouter> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'photon/dist/css/photon.css'\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}